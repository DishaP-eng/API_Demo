{
	"info": {
		"_postman_id": "90a4b8ac-a16b-4d0f-9a2b-7b1f58995732",
		"name": "Contact List App",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29539563"
	},
	"item": [
		{
			"name": "Basic Test",
			"item": [
				{
					"name": "Get Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correct Email contact is returned\", function () {",
									"    pm.expect(pm.response.text()).to.include(environment.email);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"Correct FirstName is returned\", function () { ",
									"    pm.expect(jsonData.firstName).to.eql(environment.firstName);",
									"});",
									"",
									"pm.test(\"Correct LastName is returned\", function () {",
									"    pm.expect(jsonData.lastName).to.eql(environment.lastName);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contact List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is application/json \", function () {",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json; charset=utf-8\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": [
						{
							"name": "Get Contact List",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2674"
								},
								{
									"key": "Etag",
									"value": "W/\"a72-05oGjnr0zUdeFAatJo2xEgRQ7sI\""
								},
								{
									"key": "Date",
									"value": "Wed, 06 Sep 2023 06:34:36 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"_id\": \"64f73a5b805cf800135c91d8\",\n        \"firstName\": \"Radhika1\",\n        \"lastName\": \"Dave\",\n        \"birthdate\": \"1970-01-01\",\n        \"email\": \"krishna@fake.com\",\n        \"phone\": \"8005555555\",\n        \"street1\": \"1 Main St.\",\n        \"street2\": \"Apartment A\",\n        \"city\": \"Anytown\",\n        \"stateProvince\": \"KS\",\n        \"postalCode\": \"12345\",\n        \"country\": \"canada\",\n        \"owner\": \"64f72f59805cf800135c91b2\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"64f73fe6cc65a900139c8d31\",\n        \"firstName\": \"Monika\",\n        \"lastName\": \"Smith\",\n        \"birthdate\": \"1970-01-01\",\n        \"email\": \"krishna@fake.com\",\n        \"phone\": \"8005555555\",\n        \"street1\": \"1 Main St.\",\n        \"street2\": \"Apartment A\",\n        \"city\": \"Anytown\",\n        \"stateProvince\": \"KS\",\n        \"postalCode\": \"12345\",\n        \"country\": \"USA\",\n        \"owner\": \"64f72f59805cf800135c91b2\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"64f7404c805cf800135c91e7\",\n        \"firstName\": \"Monika\",\n        \"lastName\": \"Smith\",\n        \"birthdate\": \"1970-01-01\",\n        \"email\": \"krishna@fake.com\",\n        \"phone\": \"8005555555\",\n        \"street1\": \"1 Main St.\",\n        \"street2\": \"Apartment A\",\n        \"city\": \"Anytown\",\n        \"stateProvince\": \"KS\",\n        \"postalCode\": \"12345\",\n        \"country\": \"USA\",\n        \"owner\": \"64f72f59805cf800135c91b2\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"64f73136cc65a900139c8d01\",\n        \"firstName\": \"pavan\",\n        \"lastName\": \"pandya\",\n        \"email\": \"xyh@gmail.com\",\n        \"phone\": \"1111111111\",\n        \"street1\": \"123\",\n        \"street2\": \"main street\",\n        \"city\": \"hmt\",\n        \"postalCode\": \"5018\",\n        \"country\": \"india\",\n        \"owner\": \"64f72f59805cf800135c91b2\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"64f74065cc65a900139c8d32\",\n        \"firstName\": \"Moni\",\n        \"lastName\": \"patel\",\n        \"birthdate\": \"1970-01-01\",\n        \"email\": \"krishna@fake.com\",\n        \"phone\": \"8005555555\",\n        \"street1\": \"1 Main St.\",\n        \"street2\": \"Apartment A\",\n        \"city\": \"Anytown\",\n        \"stateProvince\": \"KS\",\n        \"postalCode\": \"12345\",\n        \"country\": \"USA\",\n        \"owner\": \"64f72f59805cf800135c91b2\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"64f74331cc65a900139c8d3d\",\n        \"firstName\": \"Moni\",\n        \"lastName\": \"patel\",\n        \"birthdate\": \"1970-01-01\",\n        \"email\": \"krishna@fake.com\",\n        \"phone\": \"8005555555\",\n        \"street1\": \"1 Main St.\",\n        \"street2\": \"Apartment A\",\n        \"city\": \"Anytown\",\n        \"stateProvince\": \"KS\",\n        \"postalCode\": \"12345\",\n        \"country\": \"USA\",\n        \"owner\": \"64f72f59805cf800135c91b2\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"64f818d71b46330013e0d298\",\n        \"firstName\": \"Moni\",\n        \"lastName\": \"patel\",\n        \"birthdate\": \"1970-01-01\",\n        \"email\": \"krishna@fake.com\",\n        \"phone\": \"8005555555\",\n        \"street1\": \"1 Main St.\",\n        \"street2\": \"Apartment A\",\n        \"city\": \"Anytown\",\n        \"stateProvince\": \"KS\",\n        \"postalCode\": \"12345\",\n        \"country\": \"USA\",\n        \"owner\": \"64f72f59805cf800135c91b2\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"64f81938805cf800135c959a\",\n        \"firstName\": \"Moni\",\n        \"lastName\": \"patel\",\n        \"birthdate\": \"1970-01-01\",\n        \"email\": \"krishna@fake.com\",\n        \"phone\": \"8005555555\",\n        \"street1\": \"1 Main St.\",\n        \"street2\": \"Apartment A\",\n        \"city\": \"Anytown\",\n        \"stateProvince\": \"KS\",\n        \"postalCode\": \"12345\",\n        \"country\": \"USA\",\n        \"owner\": \"64f72f59805cf800135c91b2\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"64f73166cc65a900139c8d02\",\n        \"firstName\": \"kamal\",\n        \"lastName\": \"patel\",\n        \"email\": \"gml@gmail.com\",\n        \"phone\": \"234433333\",\n        \"street1\": \"1\",\n        \"street2\": \"main street\",\n        \"city\": \"patan\",\n        \"country\": \"india\",\n        \"owner\": \"64f72f59805cf800135c91b2\",\n        \"__v\": 0\n    }\n]"
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=pm.response.json();",
									"pm.environment.set(\"token\", jsonData.token);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"dmp@gmail.com\",\n    \"password\":\"12341234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/users/login",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=pm.response.json();",
									"pm.environment.set(\"contactId\", jsonData._id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"krishna@fake.com\",\n    \"phone\": \"{{phone}}\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"{{postalCode}}\",\n    \"country\": \"{{country}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify that newly created contact got created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Record is created\", function () {",
									"    const resposeJson= pm.response.json();",
									"    const responseSize=Object.keys(resposeJson).length;",
									"    const contactId=parseInt(pm.environment.get(\"contactId\"));",
									"    const firstName=pm.environment.get(\"firstName\");",
									"    const lastName=pm.environment.get(\"lastName\");",
									"",
									"    for(let i=0;i<responseSize;i++){",
									"",
									"        if(resposeJson[i].contactId==contactId){",
									"",
									"        pm.expect(resposeJson[i].id).to.eql(contactId);",
									"        pm.expect(resposeJson[i].firstName).to.eql(firsttName);",
									"        pm.expect(resposeJson[i].lastName).to.eql(lastName);",
									"        break;",
									"    }",
									"",
									"    }",
									"    ",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Contact",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Dwija\",\n    \"lastName\": \"Pandya\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"jk@gmail.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"north\",\n    \"postalCode\": \"12345\",\n    \"country\": \"NZ\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Contact",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify record is deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Nagative Tests",
			"item": [
				{
					"name": "Set UP-Add Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=pm.response.json();",
									"pm.environment.set(\"contactId\", jsonData._id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"birthdate\": \"{{birthdate}}\",\n    \"email\": \"krishna@fake.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contact List -",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contact Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NGY3MmY1OTgwNWNmODAwMTM1YzkxYjIiLCJpYXQiOjE2OTM5MjE3MTJ9.eSyLtxbtWJZPIrmPBt1gTPbCG14faiXTIQRuPLA5SSg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/64f73685cc65a900139c8d01",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"64f73685cc65a900139c8d01"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Contact-Missing Required Field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"FirstName missing error message\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"`firstName` is required.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NGY3MmY1OTgwNWNmODAwMTM1YzkxYjIiLCJpYXQiOjE2OTM5MjE3MTJ9.eSyLtxbtWJZPIrmPBt1gTPbCG14faiXTIQRuPLA5SSg",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"Dave\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"krishna@fake.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Contact-Last Name Too Long",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NGY3MmY1OTgwNWNmODAwMTM1YzkxYjIiLCJpYXQiOjE2OTM5MjE3MTJ9.eSyLtxbtWJZPIrmPBt1gTPbCG14faiXTIQRuPLA5SSg",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"krishna\",\n    \"lastName\": \"Davekamskakdkjkdjkjakjdakjd\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"krishna@fake.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Contact-Invalid Birthdate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NGY3MmY1OTgwNWNmODAwMTM1YzkxYjIiLCJpYXQiOjE2OTM5MjE3MTJ9.eSyLtxbtWJZPIrmPBt1gTPbCG14faiXTIQRuPLA5SSg",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"krishna\",\n    \"lastName\": \"Davekamskakdkjkdjkjakjdakjd\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"krishna@fake.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Contact-invalid Formate Emailail",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NGY3MmY1OTgwNWNmODAwMTM1YzkxYjIiLCJpYXQiOjE2OTM5MjE3MTJ9.eSyLtxbtWJZPIrmPBt1gTPbCG14faiXTIQRuPLA5SSg",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Radhika\",\n    \"lastName\": \"Dave\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"krishnnnmnmnmm.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"UK\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/64f73685cc65a900139c8d08",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"64f73685cc65a900139c8d08"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Contact Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NGY3MmY1OTgwNWNmODAwMTM1YzkxYjIiLCJpYXQiOjE2OTM5MjE3MTJ9.eSyLtxbtWJZPIrmPBt1gTPbCG14faiXTIQRuPLA5SSg",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contactId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}